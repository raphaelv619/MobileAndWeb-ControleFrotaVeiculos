{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _deepAssign = _interopRequireDefault(require(\"deep-assign\"));\n\n(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nvar mergeLocalStorageItem = function mergeLocalStorageItem(key, value) {\n  var oldValue = window.localStorage.getItem(key);\n  var oldObject = JSON.parse(oldValue);\n  var newObject = JSON.parse(value);\n  var nextValue = JSON.stringify((0, _deepAssign.default)({}, oldObject, newObject));\n  window.localStorage.setItem(key, nextValue);\n};\n\nvar createPromise = function createPromise(getValue, callback) {\n  return new Promise(function (resolve, reject) {\n    try {\n      var value = getValue();\n\n      if (callback) {\n        callback(null, value);\n      }\n\n      resolve(value);\n    } catch (err) {\n      if (callback) {\n        callback(err);\n      }\n\n      reject(err);\n    }\n  });\n};\n\nvar createPromiseAll = function createPromiseAll(promises, callback, processResult) {\n  return Promise.all(promises).then(function (result) {\n    var value = processResult ? processResult(result) : null;\n    callback && callback(null, value);\n    return Promise.resolve(value);\n  }, function (errors) {\n    callback && callback(errors);\n    return Promise.reject(errors);\n  });\n};\n\nvar AsyncStorage = function () {\n  function AsyncStorage() {}\n\n  AsyncStorage.clear = function clear(callback) {\n    return createPromise(function () {\n      window.localStorage.clear();\n    }, callback);\n  };\n\n  AsyncStorage.flushGetRequests = function flushGetRequests() {};\n\n  AsyncStorage.getAllKeys = function getAllKeys(callback) {\n    return createPromise(function () {\n      var numberOfKeys = window.localStorage.length;\n      var keys = [];\n\n      for (var i = 0; i < numberOfKeys; i += 1) {\n        var key = window.localStorage.key(i);\n        keys.push(key);\n      }\n\n      return keys;\n    }, callback);\n  };\n\n  AsyncStorage.getItem = function getItem(key, callback) {\n    return createPromise(function () {\n      return window.localStorage.getItem(key);\n    }, callback);\n  };\n\n  AsyncStorage.multiGet = function multiGet(keys, callback) {\n    var promises = keys.map(function (key) {\n      return AsyncStorage.getItem(key);\n    });\n\n    var processResult = function processResult(result) {\n      return result.map(function (value, i) {\n        return [keys[i], value];\n      });\n    };\n\n    return createPromiseAll(promises, callback, processResult);\n  };\n\n  AsyncStorage.setItem = function setItem(key, value, callback) {\n    return createPromise(function () {\n      window.localStorage.setItem(key, value);\n    }, callback);\n  };\n\n  AsyncStorage.multiSet = function multiSet(keyValuePairs, callback) {\n    var promises = keyValuePairs.map(function (item) {\n      return AsyncStorage.setItem(item[0], item[1]);\n    });\n    return createPromiseAll(promises, callback);\n  };\n\n  AsyncStorage.mergeItem = function mergeItem(key, value, callback) {\n    return createPromise(function () {\n      mergeLocalStorageItem(key, value);\n    }, callback);\n  };\n\n  AsyncStorage.multiMerge = function multiMerge(keyValuePairs, callback) {\n    var promises = keyValuePairs.map(function (item) {\n      return AsyncStorage.mergeItem(item[0], item[1]);\n    });\n    return createPromiseAll(promises, callback);\n  };\n\n  AsyncStorage.removeItem = function removeItem(key, callback) {\n    return createPromise(function () {\n      return window.localStorage.removeItem(key);\n    }, callback);\n  };\n\n  AsyncStorage.multiRemove = function multiRemove(keys, callback) {\n    var promises = keys.map(function (key) {\n      return AsyncStorage.removeItem(key);\n    });\n    return createPromiseAll(promises, callback);\n  };\n\n  return AsyncStorage;\n}();\n\nexports.default = AsyncStorage;\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(mergeLocalStorageItem, \"mergeLocalStorageItem\", \"C:\\\\Users\\\\Adekz\\\\Desktop\\\\app\\\\Pim\\\\ControleFrotaVeiculosWeb\\\\node_modules\\\\react-native-web\\\\dist\\\\exports\\\\AsyncStorage\\\\index.js\");\n  reactHotLoader.register(createPromise, \"createPromise\", \"C:\\\\Users\\\\Adekz\\\\Desktop\\\\app\\\\Pim\\\\ControleFrotaVeiculosWeb\\\\node_modules\\\\react-native-web\\\\dist\\\\exports\\\\AsyncStorage\\\\index.js\");\n  reactHotLoader.register(createPromiseAll, \"createPromiseAll\", \"C:\\\\Users\\\\Adekz\\\\Desktop\\\\app\\\\Pim\\\\ControleFrotaVeiculosWeb\\\\node_modules\\\\react-native-web\\\\dist\\\\exports\\\\AsyncStorage\\\\index.js\");\n  reactHotLoader.register(AsyncStorage, \"AsyncStorage\", \"C:\\\\Users\\\\Adekz\\\\Desktop\\\\app\\\\Pim\\\\ControleFrotaVeiculosWeb\\\\node_modules\\\\react-native-web\\\\dist\\\\exports\\\\AsyncStorage\\\\index.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":null,"metadata":{},"sourceType":"script"}