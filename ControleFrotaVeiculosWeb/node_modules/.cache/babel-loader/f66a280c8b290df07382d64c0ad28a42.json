{"ast":null,"code":"'use strict';\n\nvar _typeof = require(\"@babel/runtime/helpers/typeof\");\n\n(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nvar required = require('requires-port'),\n    qs = require('querystringify'),\n    slashes = /^[A-Za-z][A-Za-z0-9+-.]*:\\/\\//,\n    protocolre = /^([a-z][a-z0-9.+-]*:)?(\\/\\/)?([\\S\\s]*)/i,\n    whitespace = \"[\\\\x09\\\\x0A\\\\x0B\\\\x0C\\\\x0D\\\\x20\\\\xA0\\\\u1680\\\\u180E\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200A\\\\u202F\\\\u205F\\\\u3000\\\\u2028\\\\u2029\\\\uFEFF]\",\n    left = new RegExp('^' + whitespace + '+');\n\nfunction trimLeft(str) {\n  return (str ? str : '').toString().replace(left, '');\n}\n\nvar rules = [['#', 'hash'], ['?', 'query'], function sanitize(address) {\n  return address.replace('\\\\', '/');\n}, ['/', 'pathname'], ['@', 'auth', 1], [NaN, 'host', undefined, 1, 1], [/:(\\d+)$/, 'port', undefined, 1], [NaN, 'hostname', undefined, 1, 1]];\nvar ignore = {\n  hash: 1,\n  query: 1\n};\n\nfunction lolcation(loc) {\n  var globalVar;\n  if (typeof window !== 'undefined') globalVar = window;else if (typeof global !== 'undefined') globalVar = global;else if (typeof self !== 'undefined') globalVar = self;else globalVar = {};\n  var location = globalVar.location || {};\n  loc = loc || location;\n\n  var finaldestination = {},\n      type = _typeof(loc),\n      key;\n\n  if ('blob:' === loc.protocol) {\n    finaldestination = new Url(unescape(loc.pathname), {});\n  } else if ('string' === type) {\n    finaldestination = new Url(loc, {});\n\n    for (key in ignore) {\n      delete finaldestination[key];\n    }\n  } else if ('object' === type) {\n    for (key in loc) {\n      if (key in ignore) continue;\n      finaldestination[key] = loc[key];\n    }\n\n    if (finaldestination.slashes === undefined) {\n      finaldestination.slashes = slashes.test(loc.href);\n    }\n  }\n\n  return finaldestination;\n}\n\nfunction extractProtocol(address) {\n  address = trimLeft(address);\n  var match = protocolre.exec(address);\n  return {\n    protocol: match[1] ? match[1].toLowerCase() : '',\n    slashes: !!match[2],\n    rest: match[3]\n  };\n}\n\nfunction resolve(relative, base) {\n  if (relative === '') return base;\n  var path = (base || '/').split('/').slice(0, -1).concat(relative.split('/')),\n      i = path.length,\n      last = path[i - 1],\n      unshift = false,\n      up = 0;\n\n  while (i--) {\n    if (path[i] === '.') {\n      path.splice(i, 1);\n    } else if (path[i] === '..') {\n      path.splice(i, 1);\n      up++;\n    } else if (up) {\n      if (i === 0) unshift = true;\n      path.splice(i, 1);\n      up--;\n    }\n  }\n\n  if (unshift) path.unshift('');\n  if (last === '.' || last === '..') path.push('');\n  return path.join('/');\n}\n\nfunction Url(address, location, parser) {\n  address = trimLeft(address);\n\n  if (!(this instanceof Url)) {\n    return new Url(address, location, parser);\n  }\n\n  var relative,\n      extracted,\n      parse,\n      instruction,\n      index,\n      key,\n      instructions = rules.slice(),\n      type = _typeof(location),\n      url = this,\n      i = 0;\n\n  if ('object' !== type && 'string' !== type) {\n    parser = location;\n    location = null;\n  }\n\n  if (parser && 'function' !== typeof parser) parser = qs.parse;\n  location = lolcation(location);\n  extracted = extractProtocol(address || '');\n  relative = !extracted.protocol && !extracted.slashes;\n  url.slashes = extracted.slashes || relative && location.slashes;\n  url.protocol = extracted.protocol || location.protocol || '';\n  address = extracted.rest;\n  if (!extracted.slashes) instructions[3] = [/(.*)/, 'pathname'];\n\n  for (; i < instructions.length; i++) {\n    instruction = instructions[i];\n\n    if (typeof instruction === 'function') {\n      address = instruction(address);\n      continue;\n    }\n\n    parse = instruction[0];\n    key = instruction[1];\n\n    if (parse !== parse) {\n      url[key] = address;\n    } else if ('string' === typeof parse) {\n      if (~(index = address.indexOf(parse))) {\n        if ('number' === typeof instruction[2]) {\n          url[key] = address.slice(0, index);\n          address = address.slice(index + instruction[2]);\n        } else {\n          url[key] = address.slice(index);\n          address = address.slice(0, index);\n        }\n      }\n    } else if (index = parse.exec(address)) {\n      url[key] = index[1];\n      address = address.slice(0, index.index);\n    }\n\n    url[key] = url[key] || (relative && instruction[3] ? location[key] || '' : '');\n    if (instruction[4]) url[key] = url[key].toLowerCase();\n  }\n\n  if (parser) url.query = parser(url.query);\n\n  if (relative && location.slashes && url.pathname.charAt(0) !== '/' && (url.pathname !== '' || location.pathname !== '')) {\n    url.pathname = resolve(url.pathname, location.pathname);\n  }\n\n  if (!required(url.port, url.protocol)) {\n    url.host = url.hostname;\n    url.port = '';\n  }\n\n  url.username = url.password = '';\n\n  if (url.auth) {\n    instruction = url.auth.split(':');\n    url.username = instruction[0] || '';\n    url.password = instruction[1] || '';\n  }\n\n  url.origin = url.protocol && url.host && url.protocol !== 'file:' ? url.protocol + '//' + url.host : 'null';\n  url.href = url.toString();\n}\n\nfunction set(part, value, fn) {\n  var url = this;\n\n  switch (part) {\n    case 'query':\n      if ('string' === typeof value && value.length) {\n        value = (fn || qs.parse)(value);\n      }\n\n      url[part] = value;\n      break;\n\n    case 'port':\n      url[part] = value;\n\n      if (!required(value, url.protocol)) {\n        url.host = url.hostname;\n        url[part] = '';\n      } else if (value) {\n        url.host = url.hostname + ':' + value;\n      }\n\n      break;\n\n    case 'hostname':\n      url[part] = value;\n      if (url.port) value += ':' + url.port;\n      url.host = value;\n      break;\n\n    case 'host':\n      url[part] = value;\n\n      if (/:\\d+$/.test(value)) {\n        value = value.split(':');\n        url.port = value.pop();\n        url.hostname = value.join(':');\n      } else {\n        url.hostname = value;\n        url.port = '';\n      }\n\n      break;\n\n    case 'protocol':\n      url.protocol = value.toLowerCase();\n      url.slashes = !fn;\n      break;\n\n    case 'pathname':\n    case 'hash':\n      if (value) {\n        var char = part === 'pathname' ? '/' : '#';\n        url[part] = value.charAt(0) !== char ? char + value : value;\n      } else {\n        url[part] = value;\n      }\n\n      break;\n\n    default:\n      url[part] = value;\n  }\n\n  for (var i = 0; i < rules.length; i++) {\n    var ins = rules[i];\n    if (ins[4]) url[ins[1]] = url[ins[1]].toLowerCase();\n  }\n\n  url.origin = url.protocol && url.host && url.protocol !== 'file:' ? url.protocol + '//' + url.host : 'null';\n  url.href = url.toString();\n  return url;\n}\n\nfunction toString(stringify) {\n  if (!stringify || 'function' !== typeof stringify) stringify = qs.stringify;\n  var query,\n      url = this,\n      protocol = url.protocol;\n  if (protocol && protocol.charAt(protocol.length - 1) !== ':') protocol += ':';\n  var result = protocol + (url.slashes ? '//' : '');\n\n  if (url.username) {\n    result += url.username;\n    if (url.password) result += ':' + url.password;\n    result += '@';\n  }\n\n  result += url.host + url.pathname;\n  query = 'object' === _typeof(url.query) ? stringify(url.query) : url.query;\n  if (query) result += '?' !== query.charAt(0) ? '?' + query : query;\n  if (url.hash) result += url.hash;\n  return result;\n}\n\nUrl.prototype = {\n  set: set,\n  toString: toString\n};\nUrl.extractProtocol = extractProtocol;\nUrl.location = lolcation;\nUrl.trimLeft = trimLeft;\nUrl.qs = qs;\nmodule.exports = Url;\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(slashes, \"slashes\", \"C:\\\\Users\\\\Adekz\\\\Desktop\\\\app\\\\Pim\\\\ControleFrotaVeiculosWeb\\\\node_modules\\\\url-parse\\\\index.js\");\n  reactHotLoader.register(protocolre, \"protocolre\", \"C:\\\\Users\\\\Adekz\\\\Desktop\\\\app\\\\Pim\\\\ControleFrotaVeiculosWeb\\\\node_modules\\\\url-parse\\\\index.js\");\n  reactHotLoader.register(whitespace, \"whitespace\", \"C:\\\\Users\\\\Adekz\\\\Desktop\\\\app\\\\Pim\\\\ControleFrotaVeiculosWeb\\\\node_modules\\\\url-parse\\\\index.js\");\n  reactHotLoader.register(left, \"left\", \"C:\\\\Users\\\\Adekz\\\\Desktop\\\\app\\\\Pim\\\\ControleFrotaVeiculosWeb\\\\node_modules\\\\url-parse\\\\index.js\");\n  reactHotLoader.register(trimLeft, \"trimLeft\", \"C:\\\\Users\\\\Adekz\\\\Desktop\\\\app\\\\Pim\\\\ControleFrotaVeiculosWeb\\\\node_modules\\\\url-parse\\\\index.js\");\n  reactHotLoader.register(rules, \"rules\", \"C:\\\\Users\\\\Adekz\\\\Desktop\\\\app\\\\Pim\\\\ControleFrotaVeiculosWeb\\\\node_modules\\\\url-parse\\\\index.js\");\n  reactHotLoader.register(ignore, \"ignore\", \"C:\\\\Users\\\\Adekz\\\\Desktop\\\\app\\\\Pim\\\\ControleFrotaVeiculosWeb\\\\node_modules\\\\url-parse\\\\index.js\");\n  reactHotLoader.register(lolcation, \"lolcation\", \"C:\\\\Users\\\\Adekz\\\\Desktop\\\\app\\\\Pim\\\\ControleFrotaVeiculosWeb\\\\node_modules\\\\url-parse\\\\index.js\");\n  reactHotLoader.register(extractProtocol, \"extractProtocol\", \"C:\\\\Users\\\\Adekz\\\\Desktop\\\\app\\\\Pim\\\\ControleFrotaVeiculosWeb\\\\node_modules\\\\url-parse\\\\index.js\");\n  reactHotLoader.register(resolve, \"resolve\", \"C:\\\\Users\\\\Adekz\\\\Desktop\\\\app\\\\Pim\\\\ControleFrotaVeiculosWeb\\\\node_modules\\\\url-parse\\\\index.js\");\n  reactHotLoader.register(Url, \"Url\", \"C:\\\\Users\\\\Adekz\\\\Desktop\\\\app\\\\Pim\\\\ControleFrotaVeiculosWeb\\\\node_modules\\\\url-parse\\\\index.js\");\n  reactHotLoader.register(set, \"set\", \"C:\\\\Users\\\\Adekz\\\\Desktop\\\\app\\\\Pim\\\\ControleFrotaVeiculosWeb\\\\node_modules\\\\url-parse\\\\index.js\");\n  reactHotLoader.register(toString, \"toString\", \"C:\\\\Users\\\\Adekz\\\\Desktop\\\\app\\\\Pim\\\\ControleFrotaVeiculosWeb\\\\node_modules\\\\url-parse\\\\index.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":null,"metadata":{},"sourceType":"script"}